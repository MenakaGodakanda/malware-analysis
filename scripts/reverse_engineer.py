import os

def run_radare2(file_path, output_path):
    os.makedirs(os.path.dirname(output_path), exist_ok=True)
    with open(output_path, 'a') as report:
        report.write("Radare2 analysis report\n")
    
    # Basic analysis and apply relocations
    os.system(f"r2 -A -e bin.relocs.apply=true -e bin.cache=true -q -c 'aaaa; pd 20' {file_path} >> {output_path}")
    
    # Add additional useful commands
    os.system(f"r2 -e bin.relocs.apply=true -e bin.cache=true -q -c 'iI' {file_path} >> {output_path}")  # File headers
    os.system(f"r2 -e bin.relocs.apply=true -e bin.cache=true -q -c 'pd 20' {file_path} >> {output_path}")  # Disassemble first 20 instructions
    os.system(f"r2 -e bin.relocs.apply=true -e bin.cache=true -q -c 'iz' {file_path} >> {output_path}")  # List all strings
    os.system(f"r2 -e bin.relocs.apply=true -e bin.cache=true -q -c 'ic' {file_path} >> {output_path}")  # List all symbols and imports/exports
    os.system(f"r2 -e bin.relocs.apply=true -e bin.cache=true -q -c 'afl' {file_path} >> {output_path}")  # List all functions

# Assuming the script is run from the root of the project
sample_path = os.path.join(os.path.dirname(__file__), '../samples/sample.exe')
report_path = os.path.join(os.path.dirname(__file__), '../reports/reverse_engineer.txt')

run_radare2(sample_path, report_path)
